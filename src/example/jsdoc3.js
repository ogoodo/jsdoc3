/**
 * 这里是文档注释
 * @todo 待做事情
 * @version 1.0
 * @author chenxiaobo <chenxiaobo466@pingan.com.cn>
 */


/**
* My method description.  Like other pieces of your comment blocks,
* this can span multiple lines.
*
* @param {Object} config A config object
* @param {Function} config.callback A callback function on the config object
* @param {Boolean} [extra=false] Do extra, optional work
* @example
*   new funcExampleName(function(){console.log("Hello World")})
* @returns {Object} The constructed target object
*/
function funcExampleName(config, extra){
    extra = !!extra;   //set the default value of extra to false
    this.callback = config.callback;

    return this;
}

/**
 * 建议这种写法, 看得更清楚
 * Generate a point.
 * @returns {Object} point - The point generated by the factory.
 * @returns {number} point.x - The x coordinate.
 * @returns {number} point.y - The y coordinate.
 */
var funcPointFactory = function (x, y) {
    return {
        x:x,
        y:y
    }
}

// 定义个类型, 给其它备注使用
/**
 @typedef generatedPoint
 @type {Object}
 @property {number} x The x coordinate.
 @property {number} y The y coordinate.
 */
/**
 * 可以实现, 但是多了一层
 * Generate a point.
 * @returns {generatedPoint} The point generated by the factory.
 */
var funcPointFactoryB = function (x, y) {
    return {
        x:x,
        y:y
    }
}

/**
 * 不建议这种写法, 生成不出来
 * @return {{myNum: number, myObject}}
 * An anonymous type with the given type members.
 */
function funcGetTmpObject() {
    return {
        myNum: 2,
        myObject: 0 || undefined || {}
    }
}


// 使用@type可以定义某个变量的类型
// 以下选择一项(为了方便写在一起)


// 对象定义



/**
 * @extends {Object}
 */
function Dog(){
}






// This object uses something from another object.
/**
 * @namespace
 * @borrows trstr as trim
 */
var util = {
    trim: trstr
};

